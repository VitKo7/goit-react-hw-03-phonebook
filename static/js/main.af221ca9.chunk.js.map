{"version":3,"sources":["components/App.module.css","components/contactForm/ContactForm.jsx","components/filter/Filter.jsx","components/contactList/ContactListItem.jsx","components/contactList/ContactList.jsx","components/App.jsx","index.js"],"names":["module","exports","ContactForm","state","name","number","handleInput","event","target","value","setState","handleSubmit","preventDefault","props","onSubmit","resetForm","this","className","type","placeholder","onChange","pattern","Component","Filter","filter","ContactListItem","id","onRemove","data-id","onClick","ContactList","contacts","map","contact","App","createContact","find","alert","length","contactNew","nanoid","prevState","getFilteredContacts","toLowerCase","includes","handleRemove","contactId","dataset","item","localStorage","getItem","parsedContacts","JSON","parse","_","setItem","stringify","styles","container","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.af221ca9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2XVRt\"};","import React, { Component } from 'react';\r\n\r\nexport default class ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleInput = event => {\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    this.props.onSubmit(this.state); // todo: need more practice here\r\n\r\n    this.resetForm();\r\n  };\r\n\r\n  resetForm = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  // ---------------------------------MARKUP---------------------------------\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <div className=\"addContact\">\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label className=\"form-label fw-bold\">Name:</label>\r\n          <input\r\n            name=\"name\"\r\n            type=\"text\"\r\n            placeholder=\"Name Surname\"\r\n            className=\"form-control\"\r\n            onChange={this.handleInput}\r\n            value={name}\r\n          />\r\n          <label className=\"form-label fw-bold\">Number:</label>\r\n          <input\r\n            name=\"number\"\r\n            type=\"tel\"\r\n            placeholder=\"123-456\"\r\n            pattern=\"[0-9]{3}-[0-9]{3}\"\r\n            className=\"form-control\"\r\n            onChange={this.handleInput}\r\n            value={number}\r\n          />\r\n          <span className=\"form-text\">\r\n            <i>Use this format only:</i> xxx-xxx{' '}\r\n          </span>\r\n\r\n          <div className=\"d-md-flex justify-content-md-end\">\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-secondary btn-sm border-secondary fw-bold\"\r\n            >\r\n              Add contact\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ filter, handleInput }) => {\r\n  return (\r\n    <div>\r\n      <p>Find contacts by name:</p>\r\n      <input\r\n        name=\"filter\"\r\n        type=\"text\"\r\n        className=\"form-control\"\r\n        onChange={handleInput}\r\n        value={filter}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  handleInput: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactListItem = ({ id, name, number, onRemove }) => {\r\n  return (\r\n    <>\r\n      <span>\r\n        {name}: {number}\r\n      </span>\r\n\r\n      <button\r\n        data-id={id}\r\n        onClick={onRemove}\r\n        type=\"button\"\r\n        className=\" btn btn-light btn-sm border-secondary \"\r\n      >\r\n        Delete\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nContactListItem.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onRemove: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactListItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ContactListItem from './ContactListItem';\r\n\r\nconst ContactList = ({ contacts, onRemove }) => {\r\n  return (\r\n    <>\r\n      <ul className=\"contactList\">\r\n        {contacts.map(contact => (\r\n          <li className=\"contactListItem\" key={contact.id}>\r\n            <ContactListItem {...contact} onRemove={onRemove} />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  onRemove: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React, { Component } from 'react';\r\n// import { v4 as uuidv4 } from 'uuid';\r\n// import shortid from 'shortid';\r\nimport 'react-native-get-random-values';\r\nimport { nanoid } from 'nanoid';\r\nimport ContactForm from './contactForm/ContactForm';\r\nimport Filter from './filter/Filter';\r\nimport ContactList from './contactList/ContactList';\r\nimport styles from './App.module.css';\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    contacts: [\r\n      // { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n      // { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n      // { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n      // { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n    ],\r\n    filter: '',\r\n  };\r\n\r\n  handleInput = event => {\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  createContact = ({ name, number }) => {\r\n    const entryCheck = this.state.contacts.find(\r\n      contact => contact.name === name || contact.number === number,\r\n    );\r\n\r\n    if (entryCheck) {\r\n      alert(`This name or number already exists`);\r\n    } else if (name.length === 0 || number.length === 0) {\r\n      alert(`Please, fill in all the fields`);\r\n    } else {\r\n      const contactNew = {\r\n        // id: uuidv4(),\r\n        // id: shortid.generate(),\r\n        id: nanoid(),\r\n        name,\r\n        number,\r\n      };\r\n\r\n      this.setState(prevState => ({\r\n        contacts: [...prevState.contacts, { ...contactNew }],\r\n      }));\r\n    }\r\n  };\r\n\r\n  getFilteredContacts = () => {\r\n    const { contacts, filter } = this.state;\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n  };\r\n\r\n  handleRemove = event => {\r\n    const contactId = event.target.dataset.id;\r\n\r\n    this.setState(prevState => {\r\n      const contacts = prevState.contacts.filter(item => item.id !== contactId);\r\n      return {\r\n        contacts,\r\n      };\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    // console.log('componentDidMount');\r\n\r\n    const contacts = localStorage.getItem('contacts');\r\n    const parsedContacts = JSON.parse(contacts);\r\n\r\n    // console.log(parsedContacts);\r\n    if (parsedContacts) {\r\n      this.setState({ contacts: [...parsedContacts] });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(_, prevState) {\r\n    // console.log('componentDidUpdate');\r\n\r\n    if (this.state.contacts !== prevState.contacts) {\r\n      // console.log('обновился массив - contacts');\r\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n\r\n  // ---------------------------MARKUP---------------------------------\r\n\r\n  render() {\r\n    const { filter } = this.state;\r\n    const contacts = this.getFilteredContacts();\r\n\r\n    return (\r\n      <div className={styles.container}>\r\n        <h3>Phonebook</h3>\r\n        <ContactForm onSubmit={this.createContact} />\r\n\r\n        <div className=\"contactList\">\r\n          <h4>Contacts</h4>\r\n          <Filter filter={filter} handleInput={this.handleInput} />\r\n          <ContactList contacts={contacts} onRemove={this.handleRemove} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}